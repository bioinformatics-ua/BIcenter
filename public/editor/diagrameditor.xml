<mxEditor defaultGroup="group" defaultEdge="connector">
	<include name="assets/editor/editor-commons.xml"/>
	<add as="onInit"><![CDATA[
		function ()
		{
			onInit(this);
		}
	]]></add>
	<ui>
		<add as="graph" element="graph"/>
		<add as="status" element="status"/>
		<add as="toolbar" element="toolbar"/>
	</ui>
	<Array as="templates">
		<add as="connector">
			<Connector label="" href="">
				<mxCell edge="1">
					<mxGeometry as="geometry" relative="1"/>
				</mxCell>
			</Connector>
		</add>
		<add as="RowGenerator">
			<Step component="RowGenerator" label="Generate Rows">
				<mxCell style="icon;image=/middle/RowGenerator.svg" parent="1" vertex="1">
					<mxGeometry width="40" height="40" as="geometry"/>
				</mxCell>
			</Step>
		</add>
		<add as="JsonInput">
			<mxCell style="icon;image=/middle/JsonInput.svg" parent="1" vertex="1">
				<mxGeometry width="40" height="40" as="geometry"/>
			</mxCell>
		</add>
		<add as="TableInput">
			<Step component="TableInput" label="Table Input">
				<mxCell style="icon;image=/middle/TableInput.svg" parent="1" vertex="1">
					<mxGeometry width="40" height="40" as="geometry"/>
				</mxCell>
			</Step>
		</add>
		<add as="InsertUpdate">
			<mxCell style="icon;image=/middle/InsertUpdate.svg" parent="1" vertex="1">
				<mxGeometry width="40" height="40" as="geometry"/>
			</mxCell>
		</add>
		<add as="SQLFileOutput">
			<mxCell style="icon;image=/middle/SQLFileOutput.svg" parent="1" vertex="1">
				<mxGeometry width="40" height="40" as="geometry"/>
			</mxCell>
		</add>
		<add as="TableOutput">
			<mxCell style="icon;image=/middle/TableOutput.svg" parent="1" vertex="1">
				<mxGeometry width="40" height="40" as="geometry"/>
			</mxCell>
		</add>
		<add as="Checksum">
			<Step component="CheckSum" label = "Add a cecksum">
				<mxCell style="icon;image=/middle/Checksum.svg" parent="1" vertex="1">
					<mxGeometry width="40" height="40" as="geometry"/>
				</mxCell>
			</Step>
		</add>
		<add as="Sequence">
			<Step component="Sequence" label = "Add sequence">
				<mxCell style="icon;image=/middle/Sequence.svg" parent="1" vertex="1">
					<mxGeometry width="40" height="40" as="geometry"/>
				</mxCell>
			</Step>
		</add>
		<add as="SelectValues">
			<mxCell style="icon;image=/middle/SelectValues.svg" parent="1" vertex="1">
				<mxGeometry width="40" height="40" as="geometry"/>
			</mxCell>
		</add>
		<add as="Mail">
			<mxCell style="icon;image=/middle/Mail.svg" parent="1" vertex="1">
				<mxGeometry width="40" height="40" as="geometry"/>
			</mxCell>
		</add>
		<add as="Dummy">
			<mxCell style="icon;image=/middle/Dummy.svg" parent="1" vertex="1">
				<mxGeometry width="40" height="40" as="geometry"/>
			</mxCell>
		</add>
		<add as="SwitchCase">
			<mxCell style="icon;image=/middle/SwitchCase.svg" parent="1" vertex="1">
				<mxGeometry width="40" height="40" as="geometry"/>
			</mxCell>
		</add>
		<add as="ExecSQL">
			<mxCell style="icon;image=/middle/ExecSQL.svg" parent="1" vertex="1">
				<mxGeometry width="40" height="40" as="geometry"/>
			</mxCell>
		</add>
	</Array>
	<mxGraph as="graph" alternateEdgeStyle="verticalConnector" allowLoops="1" dropEnabled="1">
		<add as="isAutoSizeCell"><![CDATA[
			function(cell)
			{
				return mxUtils.isNode(this.model.getValue(cell), 'text');
			}
		]]></add>
		<add as="isSwimlane"><![CDATA[
			function (cell)
			{
				return mxUtils.isNode(this.model.getValue(cell), 'container');
			}
		]]></add>
		<add as="getTooltipForCell"><![CDATA[
			function(cell)
			{
				var label = cell.getAttribute('label');
				var style = cell.getStyle();
			
				return ((label != null) ? ('<b>' + label +
						'</b> (' + cell.getId() + ')<br>') : '') +
						((style != null) ? ('<br>Style: ' + style + '<br>') : '') +
						'Connections: ' + cell.getEdgeCount()+
						'<br>Children: ' + cell.getChildCount();
			}
		]]></add>
		<add as="convertValueToString"><![CDATA[
			function(cell)
			{
				return cell.getAttribute('label');
			}
		]]></add>
		<mxStylesheet as="stylesheet">
			<add as="defaultVertex">
				<add as="strokeColor" value="#5d65df"/>
				<add as="fontSize" value="12"/>
				<add as="fontColor" value="#000000"/>
				<add as="fontFamily" value="宋体"/>
			</add>
			<add as="defaultEdge">
				<add as="shape" value="connector"/>
				<add as="labelBackgroundColor" value="white"/>
				<add as="edgeStyle" value="elbowEdgeStyle"/>
				<add as="endArrow" value="classic"/>
				<add as="fontSize" value="11"/>
				<add as="fontFamily" value="宋体"/>
				<add as="align" value="center"/>
				<add as="verticalAlign" value="middle"/>
				<add as="labelBackgroundColor" value="#ffffff"/>
				<add as="rounded" value="1"/>
				<add as="strokeColor" value="#5d65df"/>
				<add as="fontColor" value="#1d258f"/>
			</add>
			<add as="label">
				<add as="shape" value="label"/>
				<add as="perimeter" value="rectanglePerimeter"/>
				<add as="fontStyle" value="1"/>
				<add as="align" value="left"/>
				<add as="verticalAlign" value="middle"/>
				<add as="imageWidth" value="32"/>
				<add as="imageHeight" value="32"/>
				<add as="rounded" value="1"/>
				<add as="glass" value="1"/>
			</add>
			<add as="icon" extend="label">
				<add as="align" value="center"/>
				<add as="imageAlign" value="center"/>
				<add as="verticalLabelPosition" value="bottom"/>
				<add as="verticalAlign" value="top"/>
				<add as="labelBackgroundColor" value="#FFFFFF"/>
				<add as="fontStyle" value="0"/>
				<add as="imageWidth" value="32"/>
				<add as="imageHeight" value="32"/>
			</add>
			<add as="entity">
				<add as="edgeStyle" value="entityRelationEdgeStyle"/>
			</add>
			<add as="vertical">
				<add as="elbow" value="vertical"/>
			</add>
			<add as="straight">
				<add as="shape" value="connector"/>
				<add as="endArrow" value="classic"/>
				<add as="edgeStyle" value="none"/>
			</add>
			<add as="arrow">
				<add as="shape" value="arrow"/>
			</add>
			<add as="swimlane">
				<add as="shape" value="swimlane"/>
				<add as="fontSize" value="12"/>
				<add as="fontStyle" value="1"/>
				<add as="startSize" value="23"/>
			</add>
			<add as="group">
				<add as="verticalAlign" value="top"/>
				<add as="dashed" value="1"/>
				<add as="opacity" value="50"/>
			</add>
			<add as="ellipse">
				<add as="shape" value="ellipse"/>
				<add as="perimeter" value="ellipsePerimeter"/>
			</add>
			<add as="rhombus">
				<add as="shape" value="rhombus"/>
				<add as="perimeter" value="rhombusPerimeter"/>
			</add>
			<add as="triangle">
				<add as="shape" value="triangle"/>
				<add as="perimeter" value="trianglePerimeter"/>
			</add>
			<add as="line">
				<add as="shape" value="line"/>
				<add as="strokeWidth" value="4"/>
				<add as="labelBackgroundColor" value="white"/>
				<add as="verticalAlign" value="top"/>
				<add as="spacingTop" value="8"/>
			</add>
			<add as="image">
				<add as="shape" value="image"/>
				<add as="labelBackgroundColor" value="white"/>
				<add as="verticalLabelPosition" value="bottom"/>
				<add as="verticalAlign" value="top"/>
			</add>
			<add as="roundImage" extend="image">
				<add as="perimeter" value="ellipsePerimeter"/>
			</add>
			<add as="rhombusImage" extend="image">
				<add as="perimeter" value="rhombusPerimeter"/>
			</add>
		</mxStylesheet>
		<mxGraphModel as="model">
			<add as="valueForCellChanged"><![CDATA[
				function(cell, value)
				{
					var previous = null;
					
					if (value == null || isNaN(value.nodeType))
					{
						previous = cell.value.getAttribute('label');

						if (value == null)
						{
							cell.value.removeAttribute('label');
						}
						else
						{
							cell.setAttribute('label', value);
						}
					}
					else
					{
						previous = cell.value;
						cell.value = value;
					}
					
					return previous;
				}
			]]></add>
			<root>
				<Diagram label="My Diagram" href="http://www.jgraph.com/" id="0">
					<mxCell/>
				</Diagram>
				<Layer label="Default Layer" id="1">
					<mxCell parent="0"/>
				</Layer>
			</root>
		</mxGraphModel>
	</mxGraph>
	<mxDefaultToolbar as="toolbar">
		<add as="connect" mode="connect" icon="/assets/images/editor/connect.gif"><![CDATA[
			function (editor)
			{
				if (editor.defaultEdge != null)
				{
					editor.defaultEdge.style = null;
				}
			}
		]]></add>
		<add as="connect" mode="connect" icon="/assets/images/editor/straight.gif"><![CDATA[
			function (editor)
			{
				if (editor.defaultEdge != null)
				{
					editor.defaultEdge.style = 'straightConnector';
				}
			}
		]]></add>
		<add as="connect" mode="connect" icon="/assets/images/editor/arrow.gif"><![CDATA[
			function (editor)
			{
				if (editor.defaultEdge != null)
				{
					editor.defaultEdge.style = 'arrowConnector';
				}
			}
		]]></add>
		<br/><br/>
		<add as="Generate Rows" template="RowGenerator" icon="/assets/images/editor/rectangle.gif"/>
		<add as="Json Input" template="JsonInput" icon="/assets/images/editor/rectangle.gif"/>
		<add as="Table Input" template="TableInput" icon="/assets/images/editor/rectangle.gif"/>
		<add as="Insert/Update" template="InsertUpdate" icon="/assets/images/editor/rectangle.gif"/>
		<add as="SQLFileOutput" template="SQLFileOutput" icon="/assets/images/editor/rectangle.gif"/>
		<add as="Table Output" template="TableOutput" icon="/assets/images/editor/rectangle.gif"/>
		<add as="Add Checksum" template="Checksum" icon="/assets/images/editor/rectangle.gif"/>
		<add as="Select Values" template="SelectValues" icon="/assets/images/editor/rectangle.gif"/>
		<add as="Mail" template="Mail" icon="/assets/images/editor/rectangle.gif"/>
		<add as="Dummy" template="Dummy" icon="/assets/images/editor/rectangle.gif"/>
		<add as="SwitchCase" template="SwitchCase" icon="/assets/images/editor/rectangle.gif"/>
		<add as="Execute SQL script" template="ExecSQL" icon="/assets/images/editor/rectangle.gif"/>
	</mxDefaultToolbar>
</mxEditor>
